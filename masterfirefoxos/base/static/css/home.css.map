{"version":3,"sources":["home.styl","lib.styl"],"names":[],"mappings":"AAUI,kBACI,OAAQ,QAIhB,gBACI,iBAAkB,MAElB,yBACI,eAAgB,KAEhB,mCACI,SAAU,SACV,OAAQ,KAQM,oCAIlB,gBACI,WAAY,2EACZ,WAAY,MAGhB,kBCiJJ,MAAO,KACP,MAAkF,MAClF,YAAmC,KACnC,aAAoC,MDjJ5B,qBCVH,UAAE,KAGE,UAAc,KDYnB,YC4HJ,MAAO,KACP,MAAO,KACP,YAAmC,KACnC,aAAoC,KD7H5B,OAAQ,EAIhB,YCmIA,MAAO,KACP,MAAkF,MAClF,YAAmC,KACnC,aAAoC,KDpIhC,cAAe,KAEf,4BCsIJ,YAAqG,KDlIjG,2BACI,MAAO,MAWQ,qCAGnB,kBCwFJ,MAAO,KACP,MAA2E,MAC3E,YAAmC,KACnC,aAAoC,MDxF5B,qBC/CH,UAAE,KAGE,UAAc,KDkDvB,YC+EA,MAAO,KACP,MAA2E,MAC3E,YAAmC,KACnC,aAAoC,MD/EhC,4BC0FJ,YAA8F,MDlFjE,+MAE7B,gBACI,iBAAoD,oCACpD,gBAAiB","file":"home.css","sourcesContent":["// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v. 2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n// Home page\n\n@require 'lib';\n\n\n.home-entry {\n    .link {\n        margin: 1.5em 0;\n    }\n}\n\n.home .masthead {\n    background-image: none;\n\n    .contain {\n        padding-bottom: 3em;\n\n        .nav-info {\n            position: absolute;\n            bottom: 20px;\n        }\n    }\n}\n\n//*----------------------------------------------------------------*/\n// @Tablet layout: 760px\n\n@media $media-query-tablet {\n\n    .home {\n\n        .masthead {\n            background: $medium-blue url('/static/img/fox-swoop.png') calc(50% + 300px) 145px no-repeat;\n            min-height: 420px;\n        }\n\n        .page-intro {\n            span_narrow(6);\n\n            h1 {\n                font-size: 48px;\n            }\n        }\n\n        .main {\n            span_all();\n            margin: 0;\n        }\n    }\n\n    .home-entry {\n        span_narrow(5);\n        margin-bottom: 2em;\n\n        &:nth-child(even) {\n            offset_narrow(1);\n        }\n\n        &:nth-child(odd) {\n            clear: left;\n        }\n    }\n\n}\n\n\n\n//*----------------------------------------------------------------*/\n// @Desktop layout: 1000px\n\n@media $media-query-desktop {\n\n    .home {\n        .page-intro {\n            span(6);\n\n            h1 {\n                font-size: 64px;\n            }\n        }\n    }\n\n    .home-entry {\n        span(5);\n\n        &:nth-child(even) {\n            offset(1);\n        }\n\n    }\n\n}\n\n@media $media-query-highres-large {\n\n    .home .masthead {\n        background-image: url('/static/img/fox-swoop-hr.png');\n        background-size: 590px 670px;\n    }\n\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v. 2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n\n// Define common variables and mixins\n\n// Typography\n// Respect the user's preferences by sizing with rems.\n$base-font-size = 100%;\n\n// Convert font-size units to rems if the unit is in pixels.\n// Declare your size in pixels and this function automatically adds the\n// equivalent size in rems while leaving the px declaration as the fallback\n// for old browsers.\n// Based on Aral Balkan's Responsive Pixels - https://github.com/aral/responsive-pixels\nremify(value) {\n    u = unit(value);\n\n    if value is 'inherit' or value is 'smaller' or value is null {\n        value\n    } else if u is 'px' {\n        return unit(value/16, 'rem');\n    } else {\n        return unit(value, u);\n    }\n}\n\n// Abstract longhand for properties that take a single value\nabstract-longhand(prop, originalArguments) {\n    value = originalArguments[0]\n    remifiedValue = remify(value)\n\n    {prop} value\n\n    if value != remifiedValue {\n        {prop} remify(value)\n    }\n}\n\n\n// Remify font-size declarations\nfont-size() {\n    abstract-longhand('font-size', arguments)\n}\n\n\n// Grid units\n$grid-column-width          = 60px;\n$grid-narrow-column-width   = 40px;\n$grid-gutter-width          = 20px;\n\n\n// Colors\n$primary-text-color     = #484848;\n$secondary-text-color   = darken($primary-text-color, 10%);\n$light-text-color       = #fff;\n\n$link-color = #09c;\n\n$light-gray     = #e3e8ec;\n$dark-gray      = darken($light-gray, 20%);\n$light-blue     = #1b9ed4;\n$medium-blue    = #1881ba;\n$dark-blue      = #115b83;\n$yellow         = #fc3;\n\n\n\n// Blue backgrounds for some page sections\nsection-blue = @block {\n    background: $medium-blue;\n    color: $light-text-color;\n\n    h1, h2, h3, legend {\n        color: $light-text-color;\n    }\n}\n\n\n// Light links for dark backgrounds\ninvert-links = @block {\n    a {\n        color: lighten($link-color, 60%);\n        text-decoration: none;\n\n        &:visited {\n            color: lighten($link-color, 50%);\n        }\n\n        &:hover,\n        &:focus,\n        &:active {\n            color: lighten($link-color, 70%);\n            text-decoration: underline;\n        }\n    }\n}\n\n\n// White links for some occasions\nlight-links = @block {\n    a {\n        color: #fff;\n\n        &:visited {\n            color: #eee;\n        }\n\n        &:hover,\n        &:focus,\n        &:active {\n            color: #fff;\n            text-decoration: underline;\n        }\n    }\n}\n\n\n// Basic button\nbutton = @block {\n    border-radius: 6px;\n    border: 0;\n    cursor: pointer;\n    display: inline-block;\n    font-weight: bold;\n    min-width: 160px;\n    padding: .5em 20px;\n    text-align: center;\n    text-decoration: none;\n    text-transform: uppercase;\n    -webkit-transition: background-color linear .1s;\n       -moz-transition: background-color linear .1s;\n            transition: background-color linear .1s;\n}\n\n\n// Override base heading styles\nnormalize-heading = @block {\n    font-family: 'Fira Sans Light', sans-serif;\n    letter-spacing: normal;\n    text-shadow: none;\n}\n\n\n// Common widths\n$width-desktop      = 1000px;\n$width-tablet       = 760px;\n$width-mobile-wide  = 440px;\n$width-mobile       = 320px;\n\n\n// Media queries\n$media-query-desktop        = 'screen and (min-width: 1000px)';\n$media-query-tablet         = 'screen and (min-width: 760px)';\n$media-query-mobile-wide    = 'screen and (min-width: 480px)';\n$media-query-mobile         = 'screen and (max-width: 480px)';\n\n// @High resolution images for @retina-type displays\n$media-query-highres        = 'only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx), only screen and (min-resolution: 144dpi)';\n$media-query-highres-large  = 'only screen and (-webkit-min-device-pixel-ratio: 1.5) and (min-width: 760px), only screen and (min-resolution: 1.5dppx) and (min-width: 760px), only screen and (min-resolution: 144dpi) and (min-width: 760px)';\n\n\n// Column spans for standard column widths\nspan(columns) {\n    float: left;\n    width: ($grid-column-width * columns) + ($grid-gutter-width * (columns - 1));\n    margin-left: ($grid-gutter-width / 2);\n    margin-right: ($grid-gutter-width / 2);\n}\n\nspan_all() {\n    float: none;\n    width: auto;\n    margin-left: ($grid-gutter-width / 2);\n    margin-right: ($grid-gutter-width / 2);\n}\n\noffset(columns) {\n    margin-left: (($grid-column-width + $grid-gutter-width) * columns) + ($grid-gutter-width * 0.5);\n}\n\n\n// Column spans for narrow column widths\nspan_narrow(columns) {\n    float: left;\n    width: ($grid-narrow-column-width * columns) + ($grid-gutter-width * (columns - 1));\n    margin-left: ($grid-gutter-width / 2);\n    margin-right: ($grid-gutter-width / 2);\n}\n\noffset_narrow(columns) {\n    margin-left: (($grid-narrow-column-width + $grid-gutter-width) * columns) + ($grid-gutter-width * 0.5);\n}\n\n\n// Mixins\nclearfix() {\n  &:before, &:after {\n    content: ' ';\n    display: table;\n  }\n\n  &:after {\n    clear: both;\n  }\n}\n\na11y-hidden() {\n    position: absolute !important;\n    height: 1px;\n    width: 1px;\n    margin: -1px;\n    overflow: hidden;\n    clip: rect(0 0 0 0);\n    padding: 0;\n    border: 0;\n}\n"],"sourceRoot":"/source/"}